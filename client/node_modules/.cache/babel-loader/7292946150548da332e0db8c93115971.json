{"ast":null,"code":"var _jsxFileName = \"/home/om621/Desktop/Breaking_Bad_Test/client/src/App.js\";\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/Header';\nimport CharacterGrid from './components/CharacterGrid';\nimport Pagination from './components/Pagination';\nimport SearchBox from './components/SearchBox';\nimport Test from './components/Test';\nimport store from './store/index';\nimport { createCharatersAction, createLoadingStateAction } from './actions/index';\n\nconst App = () => {\n  // For pagination data\n  const lastChar = store.getState().page * store.getState().charPerPage;\n  const firstChar = lastChar - store.getState().charPerPage;\n  const currChars = store.getState().characters.slice(firstChar, lastChar);\n  const totalPages = Math.ceil(store.getState().characters.length / store.getState().charPerPage); // loading characters usind BreakingBad API\n\n  const searchValue = store.getState().searchValue;\n  useEffect(() => {\n    const getChar = async () => {\n      let chars = await axios('https://www.breakingbadapi.com/api/characters?name=' + searchValue); // axios returns a promise\n\n      store.dispatch(createCharatersAction(chars.data));\n      store.dispatch(createLoadingStateAction(false));\n    };\n\n    getChar();\n  }, [searchValue]); // useEffect need a dependacy as parameter\n\n  switch (store.getState().section) {\n    case 1:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SearchBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(CharacterGrid, {\n        loading: store.getState().loading,\n        chars: currChars,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        totalPages: totalPages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }));\n\n    case 2:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Test, {\n        charId: store.getState().charId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }));\n\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SearchBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(CharacterGrid, {\n        loading: store.getState().loading,\n        chars: currChars,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        totalPages: totalPages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/om621/Desktop/Breaking_Bad_Test/client/src/App.js"],"names":["React","useEffect","axios","Header","CharacterGrid","Pagination","SearchBox","Test","store","createCharatersAction","createLoadingStateAction","App","lastChar","getState","page","charPerPage","firstChar","currChars","characters","slice","totalPages","Math","ceil","length","searchValue","getChar","chars","dispatch","data","section","loading","charId"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/Header';\nimport CharacterGrid from './components/CharacterGrid';\nimport Pagination from './components/Pagination';\nimport SearchBox from './components/SearchBox';\nimport Test from './components/Test';\nimport store from './store/index';\nimport {createCharatersAction, createLoadingStateAction} from './actions/index';\n\nconst App = () => {\n\n  // For pagination data\n\n  const lastChar = store.getState().page * store.getState().charPerPage;\n  const firstChar = lastChar - store.getState().charPerPage;\n  const currChars = store.getState().characters.slice(firstChar, lastChar);\n  const totalPages = Math.ceil(store.getState().characters.length / store.getState().charPerPage);\n\n  // loading characters usind BreakingBad API\n\n  const searchValue = store.getState().searchValue;\n\n  useEffect(() => {\n    const getChar = async () => {\n      let chars = await axios('https://www.breakingbadapi.com/api/characters?name=' + searchValue); // axios returns a promise\n      store.dispatch(createCharatersAction(chars.data));\n      store.dispatch(createLoadingStateAction(false));\n    }\n\n    getChar();\n  }, [searchValue]) // useEffect need a dependacy as parameter\n\n  switch(store.getState().section)\n  {\n    case 1:\n      return (\n        <div className=\"Container\">\n        <Header />\n        <SearchBox/>\n        <CharacterGrid loading = {store.getState().loading} chars = {currChars} />\n        <Pagination totalPages={totalPages} />\n        </div>\n      );\n    case 2:\n      return (\n        <div className=\"Container\">\n        <Header />\n        <Test charId={store.getState().charId}/>\n        </div>\n      );\n\n    default:\n      return (\n        <div className=\"Container\">\n        <Header />\n        <SearchBox/>\n        <CharacterGrid loading = {store.getState().loading} chars = {currChars} />\n        <Pagination totalPages={totalPages} />\n        </div>\n      );\n  }\n\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}