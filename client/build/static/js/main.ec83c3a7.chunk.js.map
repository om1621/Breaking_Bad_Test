{"version":3,"sources":["img/logo.png","components/Header.js","store/index.js","reducers/index.js","actions/index.js","components/CharacterGrid.js","components/Pagination.js","components/SearchBox.js","components/Test.js","App.js","index.js","img/loading.gif"],"names":["module","exports","Header","className","src","logo","alt","store","createStore","state","action","type","characters","loading","page","searchValue","section","change","charId","charPerPage","createLoadingStateAction","createSectionAction","CharacterGrid","chars","testSection","e","preventDefault","target","value","dispatch","createCharIdAction","loader","map","char","index","key","char_id","img","onClick","Pagination","totalPages","pages","i","push","pageChange","pageNumber","dataset","style","maxWidth","margin","display","justifyContent","alignItems","class","data-page","SearchBox","onSubmit","placeholder","getState","onChange","inputValue","Test","useState","questions","setQuestions","answers","setAnswers","count","setCount","useEffect","loadChar","a","axios","charObject","ans","data","appearance","length","status","console","log","loadQuestion","que","score","reduce","x","y","str","alert","question","options","option","name","id","parseInt","currentCount","radioOnChange","for","App","lastChar","firstChar","currChars","slice","Math","ceil","getChar","render","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.ec83c3a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";","import React from 'react';\nimport logo from '../img/logo.png'\n\nconst Header = () => {\n    return(\n\n        <header className=\"center p-4\">\n        <img src={logo} alt=\"logo\"/>\n        </header>\n\n    );\n    \n}\n\nexport default Header;","import {createStore} from 'redux';\nimport reducer from '../reducers/index'\n\nconst initialState = {\n    section: 1,\n    characters: [],\n    loading: true,\n    page: 1,\n    charPerPage: 8,\n    charId: 1,\n    searchValue: \"\"\n}\n\nconst store = createStore(reducer, initialState);\n\nexport default store;","export default (state, action) => {\n    \n    switch(action.type){\n\n        case \"SET_CHARACTERS\":\n            return {\n                ...state,\n                characters: action.characters\n            };\n        \n        case \"SET_LOADING_STATE\":\n            return {\n                ...state,\n                loading: action.loading\n            };\n\n        case \"SET_PAGE\":\n            return {\n                ...state,\n                page: action.page\n            };\n\n        case \"SET_SEARCHVALUE\":\n            return {\n                ...state,\n                searchValue: action.searchValue\n            };\n\n        case \"SET_SECTION\":\n            return {\n                ...state,\n                section: (state.section + action.change)\n            };\n\n        case \"SET_CHARID\":\n            return {\n                ...state,\n                charId: action.charId\n            };\n\n        default:\n            return state;\n        \n    }\n}","export const createCharatersAction = (characters) => ({\n        type: \"SET_CHARACTERS\",\n        characters: characters\n});\n\nexport const createLoadingStateAction = (loading) => ({\n    type: \"SET_LOADING_STATE\",\n    loading: loading\n});\n\nexport const createPageAction = (page) => ({\n    type: \"SET_PAGE\",\n    page: page\n});\n\nexport const createSearchValueAction = (searchValue) => ({\n    type: \"SET_SEARCHVALUE\",\n    searchValue: searchValue\n}); \n\nexport const createSectionAction = (change) => ({\n    type: \"SET_SECTION\",\n    change: change\n});\n\nexport const createCharIdAction = (charId) => ({\n    type: \"SET_CHARID\",\n    charId: charId\n});","import React from 'react';\nimport '../css/chargrid.css';\nimport loader from '../img/loading.gif'\nimport store from '../store/index'\nimport {createCharIdAction, createSectionAction, createLoadingStateAction} from '../actions/index'\n\nconst CharacterGrid = ({chars , loading}) => {\n\n    const testSection = (e) => \n    {\n        e.preventDefault();\n        const charId = e.target.value;\n        store.dispatch(createCharIdAction(charId));\n        store.dispatch(createSectionAction(1)); \n        store.dispatch(createLoadingStateAction(true));\n    }\n\n    return (loading ? <div className=\"char-grid loader\"><img src={loader} alt=\"loader\" /></div> : <div className=\"char-grid row\">\n\n    {chars.map((char , index) => (\n        <div className=\"col-lg-3 col-md-6 col-sm-12 text-center p-2 my-2s main-box\" key={char.char_id}>\n            <div className=\"img-box\">\n                <div className=\"front\">\n                    <img src={char.img} alt=\"char_img\"/>\n                </div>\n                <div className=\"back\">\n                    <button className=\"btn\" onClick = {testSection} value={char.char_id} >Take Test</button>\n                </div>\n            </div>\n        </div>\n    ))}\n\n    </div>)\n}\n\nexport default CharacterGrid;\n","import React from 'react'\nimport \"../css/pagination.css\"\nimport store from '../store/index'\nimport {createPageAction} from '../actions/index'\n\n\nconst Pagination = ({totalPages}) => {\n\n    const pages = [];\n\n    for( let i = 1 ; i <= totalPages ; i++)\n    {\n        pages.push(i);\n    }\n\n    const pageChange = (e) => {\n        e.preventDefault();\n        let pageNumber = e.target.dataset.page;\n        store.dispatch(createPageAction(pageNumber));\n    }\n\n    return (\n\n            <div className=\"page-grid\" style={{ maxWidth: \"768px\", margin: \"2rem auto\", display: \"flex\", justifyContent:\"center\", alignItems: \"center\"}}>\n                <ul class=\"pagination pagination-lg\">\n                    { pages.map((page) => (\n                        <li key={page} className=\"page-item\">\n                            <a onClick={pageChange} data-page={page} className=\"page-link\">{page}</a>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n    )\n}\n\nexport default Pagination;\n","import React from 'react'\nimport '../css/SearchBox.css'\nimport store from '../store/index';\nimport {createSearchValueAction} from '../actions/index'\n\nconst SearchBox = () => {\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        const inputValue = e.target.value;  \n        store.dispatch(createSearchValueAction(inputValue));\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    return (\n        <div className=\"search-form p-4\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                     <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Search Character.....\" value={store.getState().searchValue} onChange={handleChange} ></input>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBox;\n","import React , {useState, useEffect} from 'react'; \nimport axios from 'axios'; \nimport '../css/test.css';\nimport loader from '../img/loading.gif'\nimport store from '../store/index'\nimport {createSectionAction, createLoadingStateAction} from \"../actions/index\"\n\nfunction Test({charId}) {\n\n    const [questions, setQuestions] = useState([]);\n    const [answers, setAnswers] = useState([]);\n    const [count , setCount] = useState([0 , 0]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let score = count.reduce((x , y ) => (x + y));\n\n        let str = \"\";\n        if(score === 2)\n        {\n            str +=  \"Real Breaking Bad Fan! \\n\"\n        }\n        else if(score === 1)\n        {\n            str +=  \"Half Breaking Bad Fan :) \\n\"\n        }\n        else if(score === 0)\n        {\n            str += \"You need a Revision! \\n\"\n        }\n\n        str +=  \"Score: \" + score + '/2'\n\n        alert(str);\n\n       \n    }\n\n    const radioOnChange = (e , name) => {\n\n        let ans = e.target.value;\n        if(name === 0)\n        {\n            ans = parseInt(ans);\n        }\n\n        const currentCount = count;\n        if(ans === answers[name]){\n            currentCount[name] = 1; \n        }\n        else\n        {\n            currentCount[name] = 0;\n        }\n\n        setCount(currentCount);\n        \n    }\n\n    const goBack = (e) => {\n        e.preventDefault();\n        store.dispatch(createSectionAction(-1));\n    }\n\n    useEffect(() => {\n\n        const loadChar = async () => {\n            const charObject = await axios('https://www.breakingbadapi.com/api/characters/' + charId);\n            let ans = [];\n            ans.push(charObject.data[0].appearance.length);\n            ans.push(charObject.data[0].status);\n            console.log(ans);\n            setAnswers(ans);\n            store.dispatch(createLoadingStateAction(false));\n\n        }\n\n        const loadQuestion = async () => {\n            let que = await axios('api/questions');\n            setQuestions(que.data);\n            \n        }\n\n        loadChar();\n        loadQuestion();\n\n    }, [charId]);\n\n\n    return ( store.getState().loading ? <div className=\"test-grid loader\"><img src={loader} alt=\"loader\" /></div> : <div className=\"test-grid row black-bg\">\n        <form className=\"choice-form\" onSubmit={handleSubmit}>\n            { questions.map((question, index) => (\n               <fieldset class=\"form-group\" key={index}>\n                <div class=\"row question-div\">\n                  \n                  <div className=\"col-sm-12 question-box\">\n                    <p className=\"question\">\n                    {index + 1}. {question.que}\n                    </p>\n                  </div>\n\n                  <div class=\"col-sm-12 option-box\">\n\n                    { question.options.map((option, i) => (\n                        <div class=\"form-check option\" key={i}>\n                            <input class=\"form-check-input\" type=\"radio\" name={index} id={i} value={option} onChange={ (e) => radioOnChange(e , index)}></input>\n                            <label class=\"form-check-label\" for={i}>\n                                {option}\n                            </label>\n                       </div>\n                    ))}\n                   \n                 </div>\n\n               </div>\n             </fieldset>\n            ))}\n\n            <div className=\"row btns p-4\">\n                <div class=\"col-sm-6\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        SUBMIT\n                    </button>\n                </div>\n                <div class=\"col-sm-6\">\n                    <button className=\"btn btn-primary\" onClick={goBack}>\n                      GO BACK\n                    </button>\n                </div>\n            </div>\n        </form>  \n    </div>);\n}\n\nexport default Test;\n","import React, {useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/Header';\nimport CharacterGrid from './components/CharacterGrid';\nimport Pagination from './components/Pagination';\nimport SearchBox from './components/SearchBox';\nimport Test from './components/Test';\nimport store from './store/index';\nimport {createCharatersAction, createLoadingStateAction} from './actions/index';\n\nconst App = () => {\n\n  // For pagination data\n\n  const lastChar = store.getState().page * store.getState().charPerPage;\n  const firstChar = lastChar - store.getState().charPerPage;\n  const currChars = store.getState().characters.slice(firstChar, lastChar);\n  const totalPages = Math.ceil(store.getState().characters.length / store.getState().charPerPage);\n\n  // loading characters usind BreakingBad API\n\n  const searchValue = store.getState().searchValue;\n\n  useEffect(() => {\n    const getChar = async () => {\n      let chars = await axios('https://www.breakingbadapi.com/api/characters?name=' + searchValue); // axios returns a promise\n      store.dispatch(createCharatersAction(chars.data));\n      store.dispatch(createLoadingStateAction(false));\n    }\n\n    getChar();\n  }, [searchValue]) // useEffect need a dependacy as parameter\n\n  switch(store.getState().section)\n  {\n    case 1:\n      return (\n        <div className=\"Container\">\n        <Header />\n        <SearchBox/>\n        <CharacterGrid loading = {store.getState().loading} chars = {currChars} />\n        <Pagination totalPages={totalPages} />\n        </div>\n      );\n    case 2:\n      return (\n        <div className=\"Container\">\n        <Header />\n        <Test charId={store.getState().charId}/>\n        </div>\n      );\n\n    default:\n      return (\n        <div className=\"Container\">\n        <Header />\n        <SearchBox/>\n        <CharacterGrid loading = {store.getState().loading} chars = {currChars} />\n        <Pagination totalPages={totalPages} />\n        </div>\n      );\n  }\n\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store/index'\n\n\nconst render = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender();\nstore.subscribe(render);\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/loading.235b9b3e.gif\";"],"sourceRoot":""}